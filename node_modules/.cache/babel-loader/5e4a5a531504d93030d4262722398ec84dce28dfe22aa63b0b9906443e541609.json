{"ast":null,"code":"var _jsxFileName = \"/Users/prafulkoppalkar/Desktop/Repos/hyperswitch-demo-app/src/components/SDK.jsx\",\n  _s = $RefreshSig$();\nimport './style.css';\nimport React, { useEffect, useState } from \"react\";\nimport { PaymentElement, useElements } from \"@juspay-tech/react-hyper-js\";\nimport { useHyper } from \"@juspay-tech/react-hyper-js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SDK(_ref) {\n  _s();\n  let {\n    options1,\n    layput\n  } = _ref;\n  // console.log\n  const stripe = useHyper();\n  const elements = useElements();\n  const [message, setMessage] = useState(\"\");\n  const [isLoading, setIsLoading] = useState(false);\n  const handleSubmit = async e => {\n    console.log(\"ELEMENTS\", elements);\n    e.preventDefault();\n    if (!stripe || !elements) {\n      // Stripe.js has not yet loaded.\n      // Make sure to disable form submission until Stripe.js has loaded.\n      return;\n    }\n    setIsLoading(true);\n    const {\n      error\n    } = await stripe.confirmPayment({\n      elements,\n      confirmParams: {\n        // Make sure to change this to your payment completion page\n        return_url: \"https://hyperswitch-store-demo.netlify.app/completed\"\n      }\n    });\n    console.log(\"ERORR\", error);\n\n    // This point will only be reached if there is an immediate error when\n    // confirming the payment. Otherwise, your customer will be redirected to\n    // your `return_url`. For some payment methods like iDEAL, your customer will\n    // be redirected to an intermediate site first to authorize the payment, then\n    // redirected to the `return_url`.\n    if (error) {\n      if (error.type === \"card_error\" || error.type === \"validation_error\") {\n        setMessage(error.message);\n      }\n    } else {\n      if (error.message != \"\" && !error) {\n        setMessage(error.message);\n      } else {\n        setMessage(\"An unexpected error occurred.\");\n      }\n    }\n    setIsLoading(false);\n  };\n  useEffect(() => {\n    if (!stripe) {\n      return;\n    }\n    const clientSecret = new URLSearchParams(window.location.search).get(\"order_id\");\n    if (!clientSecret) {\n      return;\n    }\n    stripe.retrievePaymentIntent(clientSecret).then(_ref2 => {\n      let {\n        paymentIntent\n      } = _ref2;\n      console.log(\"inisde effect\", paymentIntent);\n      switch (paymentIntent.status) {\n        case \"succeeded\":\n          setMessage(\"Payment succeeded!\");\n          break;\n        case \"processing\":\n          setMessage(\"Your payment is processing.\");\n          break;\n        case \"requires_payment_method\":\n          setMessage(\"Your payment was not successful, please try again.\");\n          break;\n        default:\n          setMessage(\"Something went wrong.\");\n          break;\n      }\n    });\n  }, [stripe]);\n  var ui = /*#__PURE__*/_jsxDEV(PaymentElement, {\n    id: \"paymentElement\",\n    options: options1\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 16\n  }, this);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"SDK\",\n    children: /*#__PURE__*/_jsxDEV(\"form\", {\n      id: \"payment-form\",\n      onSubmit: handleSubmit,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        id: \"payment-form\",\n        children: [/*#__PURE__*/_jsxDEV(\"button\", {\n          id: \"submit\",\n          type: \"submit\",\n          className: \"checkoutButton\",\n          children: isLoading ? /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"spinner\",\n            id: \"spinner\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 24\n          }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n            id: \"button-text\",\n            children: \"Pay $20\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 71\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 17\n        }, this), message && /*#__PURE__*/_jsxDEV(\"div\", {\n          id: \"payment-message\",\n          children: message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 19\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 84,\n    columnNumber: 9\n  }, this);\n}\n_s(SDK, \"bDsqoL2kT838YBcmMPYZelhRQvE=\", false, function () {\n  return [useHyper, useElements];\n});\n_c = SDK;\nvar _c;\n$RefreshReg$(_c, \"SDK\");","map":{"version":3,"names":["React","useEffect","useState","PaymentElement","useElements","useHyper","SDK","options1","layput","stripe","elements","message","setMessage","isLoading","setIsLoading","handleSubmit","e","console","log","preventDefault","error","confirmPayment","confirmParams","return_url","type","clientSecret","URLSearchParams","window","location","search","get","retrievePaymentIntent","then","paymentIntent","status","ui"],"sources":["/Users/prafulkoppalkar/Desktop/Repos/hyperswitch-demo-app/src/components/SDK.jsx"],"sourcesContent":["import './style.css';\nimport React, { useEffect, useState } from \"react\";\nimport {\n  PaymentElement, useElements, \n} from \"@juspay-tech/react-hyper-js\";\nimport { useHyper } from \"@juspay-tech/react-hyper-js\";\n\nexport default function SDK({options1, layput}) {\n    // console.log\n    const stripe = useHyper()\n    const elements = useElements()\n    const [message, setMessage] = useState(\"\");\n    const [isLoading, setIsLoading] = useState(false);\n    const handleSubmit = async (e) => {\n        console.log(\"ELEMENTS\", elements)\n        e.preventDefault();\n        if (!stripe || !elements) {\n          // Stripe.js has not yet loaded.\n          // Make sure to disable form submission until Stripe.js has loaded.\n          return;\n        }\n        setIsLoading(true);\n        const { error } = await stripe.confirmPayment({\n          elements,\n          confirmParams: {\n            // Make sure to change this to your payment completion page\n            return_url: \"https://hyperswitch-store-demo.netlify.app/completed\",\n          },\n        });\n        console.log(\"ERORR\", error)\n    \n        // This point will only be reached if there is an immediate error when\n        // confirming the payment. Otherwise, your customer will be redirected to\n        // your `return_url`. For some payment methods like iDEAL, your customer will\n        // be redirected to an intermediate site first to authorize the payment, then\n        // redirected to the `return_url`.\n        if (error) {\n          if ((error.type === \"card_error\" || error.type === \"validation_error\")) {\n          setMessage(error.message);\n        }}\n        else {\n          if ((error.message != \"\") && (!error)) {\n            setMessage(error.message);\n          } else {\n            setMessage(\"An unexpected error occurred.\");\n          }\n    \n        }\n        setIsLoading(false);\n      };\n      useEffect(() => {\n        if (!stripe) {\n          return;\n        }\n    \n        const clientSecret = new URLSearchParams(window.location.search).get(\n          \"order_id\"\n        );\n    \n        if (!clientSecret) {\n          return;\n        }\n    \n        stripe.retrievePaymentIntent(clientSecret).then(({ paymentIntent }) => {\n          console.log(\"inisde effect\", paymentIntent);\n          switch (paymentIntent.status) {\n            case \"succeeded\":\n              setMessage(\"Payment succeeded!\");\n              break;\n            case \"processing\":\n              setMessage(\"Your payment is processing.\");\n              break;\n            case \"requires_payment_method\":\n              setMessage(\"Your payment was not successful, please try again.\");\n              break;\n            default:\n              setMessage(\"Something went wrong.\");\n              break;\n          }\n        });\n      }, [stripe]);\n      var ui = <PaymentElement id=\"paymentElement\" options={options1} />;\n    return (\n        <div className=\"SDK\">\n            <form id=\"payment-form\" onSubmit={handleSubmit}>\n                <div id=\"payment-form\">\n                {}\n                <button id=\"submit\" type=\"submit\" className=\"checkoutButton\" >\n          {isLoading ? <div className=\"spinner\" id=\"spinner\"></div> : <span id=\"button-text\">Pay $20</span>}\n        </button>\n      {message && <div id=\"payment-message\">{message}</div>}\n      </div>\n      </form>\n        </div>\n    )\n}"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}